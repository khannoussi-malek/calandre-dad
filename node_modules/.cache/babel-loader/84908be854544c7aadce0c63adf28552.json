{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\malek\\\\Desktop\\\\tbiby\\\\calandre\\\\src\\\\components\\\\calandre\\\\index.jsx\";\nimport { Box, Center, Grid } from \"@chakra-ui/layout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Calandre(rowNumber) {\n  const Hours = [\"00:00\", \"01:00\", \"02:00\", \"03:00\", \"04:00\", \"05:00\", \"06:00\", \"07:00\", \"08:00\", \"09:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\"];\n  const elements = [\"one\", \"two\", \"three\"];\n\n  for (let i = 0; i < rowNumber; i++) {}\n\n  const items = [];\n\n  for (const [index, value] of elements.entries()) {\n    items.push( /*#__PURE__*/_jsxDEV(\"li\", {\n      children: value\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 16\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    templateColumns: \"repeat(5, 1fr)\",\n    gap: 1,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      bg: \"blue.500\",\n      children: [/*#__PURE__*/_jsxDEV(Center, {\n        h: \"160px\",\n        bg: \"red.500\",\n        children: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), Hours.map(value => /*#__PURE__*/_jsxDEV(Center, {\n        h: \"160px\",\n        fontSize: \"20px\",\n        children: value\n      }, value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), items]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Calandre;\nexport default Calandre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calandre\");","map":{"version":3,"sources":["C:/Users/malek/Desktop/tbiby/calandre/src/components/calandre/index.jsx"],"names":["Box","Center","Grid","Calandre","rowNumber","Hours","elements","i","items","index","value","entries","push","map"],"mappings":";AAAA,SAASA,GAAT,EAAcC,MAAd,EAAsBC,IAAtB,QAAkC,mBAAlC;;;AAEA,SAASC,QAAT,CAAkBC,SAAlB,EAA6B;AAC3B,QAAMC,KAAK,GAAG,CACZ,OADY,EAEZ,OAFY,EAGZ,OAHY,EAIZ,OAJY,EAKZ,OALY,EAMZ,OANY,EAOZ,OAPY,EAQZ,OARY,EASZ,OATY,EAUZ,OAVY,EAWZ,OAXY,EAYZ,OAZY,EAaZ,OAbY,EAcZ,OAdY,EAeZ,OAfY,EAgBZ,OAhBY,EAiBZ,OAjBY,EAkBZ,OAlBY,EAmBZ,OAnBY,EAoBZ,OApBY,EAqBZ,OArBY,EAsBZ,OAtBY,EAuBZ,OAvBY,EAwBZ,OAxBY,CAAd;AA0BA,QAAMC,QAAQ,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,OAAf,CAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,SAApB,EAA+BG,CAAC,EAAhC,EAAoC,CAAE;;AACtC,QAAMC,KAAK,GAAG,EAAd;;AAEA,OAAK,MAAM,CAACC,KAAD,EAAQC,KAAR,CAAX,IAA6BJ,QAAQ,CAACK,OAAT,EAA7B,EAAiD;AAC/CH,IAAAA,KAAK,CAACI,IAAN,eAAW;AAAA,gBAAiBF;AAAjB,OAASD,KAAT;AAAA;AAAA;AAAA;AAAA,YAAX;AACD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,eAAe,EAAC,gBAAtB;AAAuC,IAAA,GAAG,EAAE,CAA5C;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAC,MAAP;AAAc,MAAA,EAAE,EAAC,UAAjB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,OAAV;AAAkB,QAAA,EAAE,EAAC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIGJ,KAAK,CAACQ,GAAN,CAAWH,KAAD,iBACT,QAAC,MAAD;AAAQ,QAAA,CAAC,EAAC,OAAV;AAA8B,QAAA,QAAQ,EAAC,MAAvC;AAAA,kBACGA;AADH,SAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA,cADD,CAJH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAWGF,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;KAjDQL,Q;AAmDT,eAAeA,QAAf","sourcesContent":["import { Box, Center, Grid } from \"@chakra-ui/layout\";\r\n\r\nfunction Calandre(rowNumber) {\r\n  const Hours = [\r\n    \"00:00\",\r\n    \"01:00\",\r\n    \"02:00\",\r\n    \"03:00\",\r\n    \"04:00\",\r\n    \"05:00\",\r\n    \"06:00\",\r\n    \"07:00\",\r\n    \"08:00\",\r\n    \"09:00\",\r\n    \"10:00\",\r\n    \"11:00\",\r\n    \"12:00\",\r\n    \"13:00\",\r\n    \"14:00\",\r\n    \"15:00\",\r\n    \"16:00\",\r\n    \"17:00\",\r\n    \"18:00\",\r\n    \"19:00\",\r\n    \"20:00\",\r\n    \"21:00\",\r\n    \"22:00\",\r\n    \"23:00\",\r\n  ];\r\n  const elements = [\"one\", \"two\", \"three\"];\r\n  for (let i = 0; i < rowNumber; i++) {}\r\n  const items = [];\r\n\r\n  for (const [index, value] of elements.entries()) {\r\n    items.push(<li key={index}>{value}</li>);\r\n  }\r\n  return (\r\n    <Grid templateColumns=\"repeat(5, 1fr)\" gap={1}>\r\n      <Box w=\"100%\" bg=\"blue.500\">\r\n        <Center h=\"160px\" bg=\"red.500\">\r\n          /\r\n        </Center>\r\n        {Hours.map((value) => (\r\n          <Center h=\"160px\" key={value} fontSize=\"20px\">\r\n            {value}\r\n          </Center>\r\n        ))}\r\n      </Box>\r\n      {items}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Calandre;\r\n"]},"metadata":{},"sourceType":"module"}