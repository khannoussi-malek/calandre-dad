{"ast":null,"code":"var _jsxFileName = \"C:\\\\pfe\\\\calandre\\\\calandre-dad\\\\src\\\\components\\\\calandre\\\\timeElement\\\\index.jsx\";\nimport { Box, Flex, Text } from \"@chakra-ui/layout\";\nimport { Grid } from \"@chakra-ui/layout\";\nimport { GridItem } from \"@chakra-ui/layout\";\nimport Task from \"./../taks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TimeElement = props => {\n  const {\n    HoursValue,\n    value,\n    addtaks,\n    task\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    h: \"160px\",\n    fontSize: \"20px\",\n    border: \"1px\",\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      h: \"100%\",\n      templateRows: \"repeat(4, 1fr)\",\n      border: \"3px\",\n      borderColor: \"red.200\",\n      gap: 0,\n      children: [/*#__PURE__*/_jsxDEV(GridItem, {\n        bgColor: \"gray.50\",\n        maxH: \"40px\",\n        onClick: () => addtaks(value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"00\", value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"00\"),\n        borderBottom: \"1px\",\n        id: value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"00\" //   bgColor=\"gray.50\"\n        ,\n        borderColor: \"gray.200\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: HoursValue.slice(0, 3) + \"00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), task.map(taskvalue => taskvalue.start === value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"00\" ? /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this) : ``)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        onClick: () => addtaks(value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"15\", value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"15\"),\n        borderBottom: \"1px\",\n        id: value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"15\",\n        bgColor: \"gray.100\",\n        borderColor: \"gray.200\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: HoursValue.slice(0, 3) + \"15\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), task.map(taskvalue => taskvalue.start === value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"15\" ? /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this) : ``)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        onClick: () => addtaks(value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"30\", value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"30\"),\n        borderBottom: \"1px\",\n        id: value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"30\",\n        bgColor: \"gray.200\",\n        borderColor: \"gray.200\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: HoursValue.slice(0, 3) + \"30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), task.map(taskvalue => taskvalue.start === value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"30\" ? /*#__PURE__*/_jsxDEV(Task, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this) : ``)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GridItem, {\n        onClick: () => addtaks(value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"45\", value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"45\"),\n        borderBottom: \"1px\",\n        id: value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"45\",\n        bgColor: \"gray.300\",\n        borderColor: \"gray.200\",\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"xs\",\n            children: HoursValue.slice(0, 3) + \"45\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), task.map(taskvalue => taskvalue.start === value.toISOString().slice(0, 10) + \"T\" + HoursValue.slice(0, 3) + \"45\" ? /*#__PURE__*/_jsxDEV(Task, {\n            start: taskvalue.start\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 17\n          }, this) : ``)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TimeElement;\nexport default TimeElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeElement\");","map":{"version":3,"sources":["C:/pfe/calandre/calandre-dad/src/components/calandre/timeElement/index.jsx"],"names":["Box","Flex","Text","Grid","GridItem","Task","TimeElement","props","HoursValue","value","addtaks","task","toISOString","slice","map","taskvalue","start"],"mappings":"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","sourcesContent":["import { Box, Flex, Text } from \"@chakra-ui/layout\";\r\nimport { Grid } from \"@chakra-ui/layout\";\r\nimport { GridItem } from \"@chakra-ui/layout\";\r\nimport Task from \"./../taks\";\r\n\r\nconst TimeElement = (props) => {\r\n  const { HoursValue, value, addtaks, task } = props;\r\n  return (\r\n    <Box h=\"160px\" fontSize=\"20px\" border=\"1px\">\r\n      <Grid\r\n        h=\"100%\"\r\n        templateRows=\"repeat(4, 1fr)\"\r\n        border=\"3px\"\r\n        borderColor=\"red.200\"\r\n        gap={0}\r\n      >\r\n        <GridItem\r\n          bgColor=\"gray.50\"\r\n          maxH=\"40px\"\r\n          onClick={() =>\r\n            addtaks(\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"00\",\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"00\"\r\n            )\r\n          }\r\n          borderBottom=\"1px\"\r\n          id={\r\n            value.toISOString().slice(0, 10) +\r\n            \"T\" +\r\n            HoursValue.slice(0, 3) +\r\n            \"00\"\r\n          }\r\n          //   bgColor=\"gray.50\"\r\n          borderColor=\"gray.200\"\r\n        >\r\n          <Flex>\r\n            <Text fontSize=\"xs\">{HoursValue.slice(0, 3) + \"00\"}</Text>\r\n            {task.map((taskvalue) =>\r\n              taskvalue.start ===\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"00\" ? (\r\n                <Task />\r\n              ) : (\r\n                ``\r\n              )\r\n            )}\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem\r\n          onClick={() =>\r\n            addtaks(\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"15\",\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"15\"\r\n            )\r\n          }\r\n          borderBottom=\"1px\"\r\n          id={\r\n            value.toISOString().slice(0, 10) +\r\n            \"T\" +\r\n            HoursValue.slice(0, 3) +\r\n            \"15\"\r\n          }\r\n          bgColor=\"gray.100\"\r\n          borderColor=\"gray.200\"\r\n        >\r\n          <Flex>\r\n            <Text fontSize=\"xs\">{HoursValue.slice(0, 3) + \"15\"}</Text>\r\n            {task.map((taskvalue) =>\r\n              taskvalue.start ===\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"15\" ? (\r\n                <Task />\r\n              ) : (\r\n                ``\r\n              )\r\n            )}\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem\r\n          onClick={() =>\r\n            addtaks(\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"30\",\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"30\"\r\n            )\r\n          }\r\n          borderBottom=\"1px\"\r\n          id={\r\n            value.toISOString().slice(0, 10) +\r\n            \"T\" +\r\n            HoursValue.slice(0, 3) +\r\n            \"30\"\r\n          }\r\n          bgColor=\"gray.200\"\r\n          borderColor=\"gray.200\"\r\n        >\r\n          <Flex>\r\n            <Text fontSize=\"xs\">{HoursValue.slice(0, 3) + \"30\"}</Text>\r\n            {task.map((taskvalue) =>\r\n              taskvalue.start ===\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"30\" ? (\r\n                <Task />\r\n              ) : (\r\n                ``\r\n              )\r\n            )}\r\n          </Flex>\r\n        </GridItem>\r\n        <GridItem\r\n          onClick={() =>\r\n            addtaks(\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"45\",\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"45\"\r\n            )\r\n          }\r\n          borderBottom=\"1px\"\r\n          id={\r\n            value.toISOString().slice(0, 10) +\r\n            \"T\" +\r\n            HoursValue.slice(0, 3) +\r\n            \"45\"\r\n          }\r\n          bgColor=\"gray.300\"\r\n          borderColor=\"gray.200\"\r\n        >\r\n          <Flex>\r\n            <Text fontSize=\"xs\">{HoursValue.slice(0, 3) + \"45\"}</Text>\r\n            {task.map((taskvalue) =>\r\n              taskvalue.start ===\r\n              value.toISOString().slice(0, 10) +\r\n                \"T\" +\r\n                HoursValue.slice(0, 3) +\r\n                \"45\" ? (\r\n                <Task start={taskvalue.start} />\r\n              ) : (\r\n                ``\r\n              )\r\n            )}\r\n          </Flex>\r\n        </GridItem>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\nexport default TimeElement;\r\n"]},"metadata":{},"sourceType":"module"}